/*
 * shdlc.h
 *
 * Descripción: Define las estructuras y funciones para el manejo de comunicaciones SHDLC.
 * Autor: Luis Gómez P.
 * Derechos de Autor: (C) 2023 Luis Gómez P. EIRL
 * Licencia: GNU General Public License v3.0
 *
 * Este programa es software libre: puedes redistribuirlo y/o modificarlo
 * bajo los términos de la Licencia Pública General GNU publicada por
 * la Free Software Foundation, ya sea la versión 3 de la Licencia, o
 * (a tu elección) cualquier versión posterior.
 *
 * Este programa se distribuye con la esperanza de que sea útil,
 * pero SIN NINGUNA GARANTÍA; sin siquiera la garantía implícita
 * de COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO PARTICULAR. Ver la
 * Licencia Pública General GNU para más detalles.
 *
 * Deberías haber recibido una copia de la Licencia Pública General GNU
 * junto con este programa. Si no es así, visita <http://www.gnu.org/licenses/>.
 *
 * SPDX-License-Identifier: GPL-3.0-only
 *
 */

#ifndef INC_SHDLC_H_
#define INC_SHDLC_H_

/** @file
 ** @brief Definiciones y declaraciones para la interacción con comunicaciones SHDLC.
 **/

/* === Inclusión de archivos de cabecera ======================================================== */
#include <stdint.h>
#include <stddef.h>

/* === Definiciones de macros públicas ========================================================== */
#define FRAME_DATA_VECTOR_SIZE_MOSI 60
#define FRAME_DATA_VECTOR_SIZE_MISO 60

/* === Declaraciones de tipos de datos públicos ================================================= */
typedef struct Shdlc_FrameMosi{
    uint8_t adr;
    uint8_t cmd;
    uint8_t myVector[FRAME_DATA_VECTOR_SIZE_MOSI];
    uint8_t chk;
    uint8_t longframe;
} Shdlc_FrameMosi;

typedef struct Shdlc_FrameMiso{
    uint8_t adr;
    uint8_t cmd;
    uint8_t lon;
    uint8_t myVector[FRAME_DATA_VECTOR_SIZE_MISO];
    uint8_t chk;
    uint8_t longframe;
} Shdlc_FrameMiso;

/* === Declaraciones de funciones públicas ====================================================== */

/**
 * @brief Obtiene un frame MISO (Master In Slave Out) de ejemplo o de respuesta de una operación SHDLC.
 *
 * Esta función simula la recepción de un frame MISO desde un dispositivo esclavo en respuesta a un comando SHDLC previamente enviado por el maestro. Se utiliza principalmente para fines de prueba y desarrollo, proporcionando un frame de respuesta estático o generado según necesidades específicas.
 *
 * @return Una estructura `Shdlc_FrameMiso` que contiene los datos del frame MISO de ejemplo o de respuesta.
 */


Shdlc_FrameMiso SHDLC_GetFrameMiso(void);

/**
 * @brief Calcula el tamaño de los datos útiles en un frame SHDLC, excluyendo los delimitadores y el checksum.
 *
 * Analiza un arreglo de bytes de entrada correspondiente a un frame SHDLC y calcula la longitud de los datos útiles contenidos en el mismo. Esta función es específica para frames SHDLC, teniendo en cuenta la estructura y delimitadores propios del protocolo.
 *
 * @param input Puntero al arreglo de bytes de entrada que representa el frame SHDLC.
 * @param inputSize Tamaño del arreglo de bytes de entrada.
 * @return El tamaño de los datos útiles contenidos en el frame SHDLC; devuelve -1 si el frame no cumple con las expectativas del protocolo SHDLC.
 */

int SHDLC_CalculateDataSize(const uint8_t* input, size_t inputSize);

#endif /* INC_SHDLC_H_ */
